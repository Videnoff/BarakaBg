async function getDataAsync() { var response = await fetch("api/statistics/userroles"); return await response.json() } function addData(chart, label, data) { chart.data.labels.push(label); chart.data.datasets.forEach(dataset => { dataset.data.push(data) }); chart.update() } function removeData(chart) { chart.data.labels.pop(); chart.data.datasets.forEach(dataset => { dataset.data.pop() }); chart.update() } Chart.defaults.global.defaultFontFamily = "Nunito"; Chart.defaults.global.defaultFontColor = "#858796"; var ctx = document.getElementById("usersInRolesChart"), usersInRolesChart = new Chart(ctx, { type: "doughnut", data: { labels: [], datasets: [{ data: [], backgroundColor: ["#4e73df", "#1cc88a", "#36b9cc"], hoverBackgroundColor: ["#2e59d9", "#17a673", "#2c9faf"], hoverBorderColor: "rgba(234, 236, 244, 1)" }] }, options: { maintainAspectRatio: !1, tooltips: { backgroundColor: "rgb(255,255,255)", bodyFontColor: "#858796", borderColor: "#dddfeb", borderWidth: 1, xPadding: 15, yPadding: 15, displayColors: !1, caretPadding: 10, callbacks: { label: function (tooltipItem, data) { return data.labels[tooltipItem.index] + ": " + data.datasets[0].data[tooltipItem.index] + "%" } } }, legend: { display: !0 }, cutoutPercentage: 80 } }); (() => { removeData(usersInRolesChart); var userRoles = await getDataAsync(); userRoles.forEach(userRole => addData(usersInRolesChart, userRole.roleName, userRole.percentage)) })();