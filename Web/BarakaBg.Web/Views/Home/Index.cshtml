@using BarakaBg.Common
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Configuration
@inject IWebHostEnvironment environment
@inject IConfiguration configuration
@model BarakaBg.Web.ViewModels.Home.IndexViewModel
@{
    this.ViewData["Title"] = "Home Page";
}

@*<div>
        <img width="100" height="100" src="@Url.Action("GetImage", "Home", new {name = "14 siena-320x360.jpg"})"/>
    </div>*@

<link href="~/favicon.ico" rel="icon" type="image/x-icon" />

<div class="text-center row">
    <h1 class="display-4">Добре дошли в @GlobalConstants.SystemName!</h1>
    <div class="col-md-8">
        <div class="row">
            @foreach (var product in this.Model.RandomProducts)
            {
                <div class="card col-md-6">
                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.CategoryName</p>
                        <a asp-controller="Products" asp-action="ById" asp-route-id="@product.Id" class="btn btn-primary">Go to Product</a>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="col-md-4">
        <p>We have:</p>
        <ul class="list-group">
            <li class="list-group-item bg-info">Products: @Model.ProductsCount</li>
            <li class="list-group-item bg-light">Categories: @Model.CategoriesCount</li>
            <li class="list-group-item bg-info">Images: @Model.ImagesCount</li>
            <li class="list-group-item bg-light">Ingredients: @Model.IngredientsCount</li>
        </ul>
    </div>
</div>


<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion">
    </ul>
</div>
<!--Script references. -->
<!--Reference the jQuery library. -->
<script src="~/lib/jquery/dist/jquery.js"></script>uery-3.1.1.min.js">
<!--Reference the SignalR library. -->
<script src="~/lib/signalr/dist/browser/signalr.min.js"></script>.1.min.js">
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
<!--Add script to update the page and send messages.-->
<script type="text/javascript">
        $(function () {
            // Declare a proxy to reference the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.broadcastMessage = function (name, message) {
                // Html encode display name and message.
                var encodedName = $('<div />').text(name).html();
                var encodedMsg = $('<div />').text(message).html();
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + encodedName
                    + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
</script>

@section Scripts
{
}
